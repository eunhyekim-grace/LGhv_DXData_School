-- sample data 확인
 SELECT * FROM EMP;
 --DESC EMP; -- ORACLE은 외부에서 DESC 명령을 사용할 수 있도록 지원X 	-> Schemas - 내 USER NUMBER - tables: 보다 정확한 정보

-- EMP 테이블엔 EMPNO라는 사원번호, MGR 관리자 사원 번호 컬럼 존재
-- MGR이 NULL인 데이터가 가장 높은 level의 데이터
-- EMP 테이블의 레벨이 얼마가 최대인지 확인
SELECT MAX(LEVEL) FROM EMP
START WITH MGR IS NULL
CONNECT BY PRIOR EMPNO = MGR;

-- EMP 테이블에서 JOB이 PRESIDENT인 데이터부터 아래 방향으로 LEVEL과 ENAME, EMPNO, MGR조회
SELECT LEVEL, ENAME, EMPNO, MGR, CONNECT_BY_ISLEAF FROM EMP
START WITH UPPER(JOB) = 'PRESIDENT'
-- START WITH ENAME = 'JONES' -- 출발점 JONES로 설정 - JONES 부하 직원 조회
CONNECT BY PRIOR MGR = EMPNO; -- JONES부터 상관을 조회

-- ROWID 조회
SELECT ROWID,ENAME FROM EMP;

-- EMP 테이블에서 DEPTNO 별로 한 명의 DEPTNO와 ENAME 조회

-- DEPTNO 별로 ENAME과 DEPTNO를 1개 씩만 조회
SELECT ENAME, DEPTNO FROM EMP;

-- DISTINCT는 여러개의 컬럼이 작성되면 모든 컬럼의 값이 같아야 제거
SELECT DISTINCT ENAME, DEPTNO FROM EMP;

-- GROUP BY는 그룹화 하지 않은 컬럼을 SELECT 절에 출력할 수 없음
SELECT DEPTNO, ENAME FROM EMP
GROUP BY DEPTNO;

-- 다른 컬럼을 ㄱ-사용하지 않고 그룹화 한 후 ROWID가 가장 큰 데이터 추출
SELECT DEPTNO, ENAME FROM EMP
WHERE ROWID IN (SELECT MAX(ROWID) FROM EMP GROUP BY DEPTNO);

-- 행 번호 조회
SELECT ROWNUM, ENAME FROM EMP;

-- ROWNUM 을 이용한 조회 조건을 만들 때 주의
SELECT ROWNUM, ENAME FROM EMP
WHERE ROWNUM <3;

SELECT ROWNUM, ENAME FROM EMP
WHERE ROWNUM > 3;

-- 급여를 내림차수능로 정렬해서 조회
SELECT * FROM EMP 
GROUP BY SAL DESC;

-- 급열르 내림차순으로 정렬해서 5개의 데이터만 조회
SELECT * FROM EMP
ORDER BY SAL DESC 
OFFSET 0 
ROWS FETCHF NEXT 5 ROWS ONLY;

-- EMP 테이블에 사원이라는 SYNONYM 생성
CREATE SYNONYM 사원
FOR EMP;

SELECT * FROM 사원;
SELECT * FROM EMP;

DROP SEQUENCE DEPT_SEQ;
-- SEQUENCE 생성
-- 초기값: 1000, 증가: 10
CREATE SEQUENCE DEPT_SEQ
	START WITH 50
	INCREMENT BY 3;
	
-- 값 확인
SELECT DEPT_SEQ.NEXTVAL FROM DUAL;

-- SEQUENCE를 이용한 데이터 삽입
INSERT INTO DEPT(DEPTNO, DNAME, LOC) VALUES(DEPT_SEQ.NEXTVAL, '기획','목동');

-- 확인
SELECT * FROM DEPT;

-- EMP 테이블에서 JOB별로 SAL의 평균을 조회
SELECT NVL(JOB,'전체') JOB, AVG(SAL) 급여평균 FROM EMP
GROUP BY ROLLUP(JOB);

-- DEPTNO 별로 SAL의 합계 조회
-- 숫자 컬럼은 조회 할 때 DECODE로 감싸야 함
-- DECODE 값이 NULL이면 전체 그렇지 않으면 DEPTNO를 변환해서 조회
SELECT DECODE(DEPTNO, NULL, '전체', DEPTNO) DEPTNO, SUM(SAL) 급여합계 FROM EMP
GROUP BY ROLLUP(DEPTNO);

-- 부서 별 합계와 전체 합계 조회
SELECT DEPTNO, JOB, SUM(SAL) 급여합계 FROM EMP
GROUP BY ROLLUP(DEPTNO, JOB)
ORDER BY DEPTNO;

-- 전체 합계는 제외
SELECT DEPTNO, NVL(JOB, '전체'), SUM(SAL) 급여합계 FROM EMP
GROUP BY DEPTNO, ROLLUP(JOB)
ORDER BY DEPTNO;

-- CUBE는 모든 중간 집계를 조회
SELECT DEPTNO, JOB, SUM(SAL) 급여합계 FROM EMP
GROUP BY CUBE(DEPTNO, JOB)
ORDER BY DEPTNO;

-- GROUPING: 중간 집계 이면 1, 그렇지 않으면 0을 리턴
SELECT DEPTNO, GROUPING(DEPTNO), JOB, GROUPING(JOB), SUM(SAL) 급여합계 FROM EMP
GROUP BY ROLLUP(DEPTNO, JOB);

SELECT DEPTNO, DECODE(GROUPING(DEPTNO),1,'전체 합계') AS ALLTOT,
	JOB, DECODE(GROUPING(JOB), 1, '부서 합계') AS DEPTTOT, SUM(SAL) 급여합계 FROM EMP
GROUP BY ROLLUP(DEPTNO, JOB);

-- GROUPPING SETS는 개별 그룹화를 수행함
SELECT DEPTNO, JOB, SUM(SAL) 급여합계 FROM EMP
GROUP BY GROUPING SETS(DEPTNO, JOB)
ORDER BY DEPTNO;

-- EMP 테이블에서 전체 SAL에서 자신의 SAL 비율
-- SAL/SUM(SAL)의 행의 개수가 달라서 예외
SELECT ENAME, SAL, SAL/SUM(SAL) FROM EMP;

-- SUM(SAL)을 전부 복사해서 14개 행으로 만들어서 조회 
-- 컬럼 이름에 별명을 부여하고자 하는 경우에는 컬럼 이름이나 연산식 다음에 AS 별명
-- AS 는 생략 가능
-- 별명에 영문 대문자나 공백이 있으면 ""로 감싸야함
SELECT ENAME, SAL, SAL* 100/SUM(SAL) OVER() AS "급여 비율"
FROM EMP;

-- EMP 테이블에서 EMPNO, ENAME, SAL 현재 행까지의 SAL 합계 조회
SELECT EMPNO, ENAME, SAL, SUM(SAL) OVER(ORDER BY 
SAL ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) "현재 행- 급여합계" FROM EMP;	

-- 현재 행 부터 마지막 행까지의 SAL의 합계 
SELECT EMPNO, ENAME, SAL, SUM(SAL) OVER(ORDER BY SAL
	ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) "현재 행 - 마지막" FROM EMP;
	
-- 부서별 급여 평균
SELECT EMPNO, ENAME, SAL, AVG(SAL) OVER(PARTITION BY DEPTNO) "부서별 급여 평균" FROM EMP;

-- 부서별 급여 순위
SELECT DEPTNO, ENAME, SAL, 
	RANK() OVER(PARTITION BY DEPTNO ORDER BY SAL DESC) "급여 순위", -- 건너 뜀
	DENSE_RANK() OVER(PARTITION BY DEPTNO ORDER BY SAL DESC) "급여 순위", -- 건너 뛰지 않음
	ROW_NUMBER() OVER(PARTITION BY DEPTNO ORDER BY SAL DESC) "급여 순위" FROM EMP; -- 동일한 순위 취급X
	
-- PIVOT
SELECT * FROM EMP
PIVOT(MAX(SAL) FOR DEPTNO IN(10,20,30));